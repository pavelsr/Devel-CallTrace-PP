package dctpp;

# ABSTRACT: Postprocessor of Devel::CallTrace output

=head1 USAGE

	perl -d:CallTrace x.pl > /dev/null 2>trace.txt
	
	perl -d:CallTrace x.pl > /dev/null | tee trace.txt
	dctpp --just_uniq_modules 1 -v 1 trace.txt > trace_processed.txt

	perl -d:CallTrace x.pl > /dev/null | tee trace.txt | dctpp trace.txt | tee trace_processed.txt
	
=cut

use strict;
use warnings;

use Devel::CallTrace::PP;
use Getopt::Long::Descriptive;

my ( $opts, $usage ) = describe_options(
    $0 . ' %o <filename_of_text_file_with_trace>',
    [ 'hide_cpan=i', "hide modules published on CPAN", { default => 1 } ],
    [ 'hide_core=i', "hide CORE modules",              { default => 1 } ],
    [
        'hide_constants=i',
        "hide constants (capital case only methods)",
        { default => 1 }
    ],
    [ 'hide_lineno=i',       "hide file and line number", { default => 0 } ],
    [ 'just_uniq_modules=i', "print only unique modules", { default => 0 } ],
    [ 'just_uniq_calls=i',   "print only unique calls",   { default => 0 } ],
    [ 'fold_calls=i',        "fold same calls",           { default => 1 } ],
    [ 'verbose|v',           "print extra stuff" ],
    [ 'help', "print usage message and exit", { shortcircuit => 1 } ],
);

print( $usage->text ), exit if $opts->help;

Devel::CallTrace::PP->handler( $ARGV[0], $opts );

1;
